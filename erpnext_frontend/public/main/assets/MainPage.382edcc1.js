var b=(t,n,r)=>new Promise((i,c)=>{var p=s=>{try{e(r.next(s))}catch(o){c(o)}},u=s=>{try{e(r.throw(s))}catch(o){c(o)}},e=s=>s.done?i(s.value):Promise.resolve(s.value).then(p,u);e((r=r.apply(t,n)).next())});import{o as l,f as d,l as a,t as m,n as x,m as f,p as v,w as h,a as w,F as y,q as _,u as k,v as g,x as z,y as q}from"./vendor.f9ec8656.js";const B={class:"absolute bottom-0 left-0 mb-8 scale-150 group-hover:scale-[1.65] transition-transform",viewBox:"0 0 375 283",fill:"none",style:{opacity:"0.1"}},j={class:"relative px-7 py-5 sm:px-6 md:py-5 xl:py-5 sm:pt-10 md:pt-10 xl:pt-10 md:px-7 xl:px-7 flex items-center justify-center group-hover:scale-110 transition-transform"},D=["href"],$=["src"],S={class:"pt-4 py-9 md:py-0 md:pt-0 xl:pt-5 capitalize font-bold text-red-700"},C={__name:"WorkspaceCard",props:{workspace:{type:Object,required:!0},color:{type:String,required:!0},svgData:{type:String,required:!0},url:{type:String,required:!0}},setup(t){return(n,r)=>(l(),d("div",{class:x([" w-20  h-40 sm:flex-grow md:flex-none  relative 2xl:pt-10 overflow-hidden rounded-lg shadow-lg group border-2 border-amber-400  hover:shadow-blue-600    sm:w-36  lg:size-52 xl:size-[52]   ",t.color])},[(l(),d("svg",B)),a("div",j,[a("a",{href:t.url,class:"py-2 md:py-0 text-center size-36 2xl:size-52"},[a("img",{src:t.svgData,class:"block mx-auto size-20 md:size-20",alt:"Workspace Icon"},null,8,$),a("p",S,m(t.workspace.title),1)],8,D)])],2))}},L={Accounting:"bg-white"},N=t=>L[t]||"bg-white",E=t=>`/app/${t.toLowerCase().replace(/ /g,"-")}`,M={class:"h-screen flex flex-col"},W={class:"flex flex-grow basis-auto my-10 md:ml-16"},F={class:"flex-grow lg:overflow-hidden"},R={class:"flex flex-wrap gap-4 justify-start sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6"},O={__name:"MainPage",setup(t){const n=f([]),r=f([]),i=f(null),c=()=>b(this,null,function*(){try{const e=yield fetch("/api/method/erpnext_frontend.api.get_bootinfo");if(!e.ok)throw new Error("Network response was not ok");const s=yield e.json();console.log(s.message),n.value=s.message,r.value=s.message,i.value=s.message}catch(e){console.error("Error fetching bootinfo:",e)}});v(()=>{c()});const p=f(null);h(i,e=>{e&&(p.value=q({doctype:"Workspace",fields:["*"],idx:"title",filters:[["parent_page","in",[""]],["title","in",e]],auto:!0}))});const u=w(()=>{var e;return((e=p.value)==null?void 0:e.list.data)||[]});return(e,s)=>(l(),d("div",M,[a("div",W,[a("div",F,[a("div",R,[(l(!0),d(y,null,_(u.value,o=>(l(),k(C,{key:o.title,workspace:o,color:g(N)(o.title),svgData:o.custom_second_icon,url:g(E)(o.title)},null,8,["workspace","color","svgData","url"]))),128))])])]),s[0]||(s[0]=z('<div class="flex justify-center basis-44"><blockquote class="text-2xl font-semibold italic text-center text-slate-900"> Nothing is built on <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-gray-600 relative inline-block"><span class="relative text-white">stone</span></span> all is built on <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-yellow-400 relative inline-block"><span class="relative">sand</span></span><br><br> but we must build as if the <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-yellow-400 relative inline-block"><span class="relative">sand</span></span> were <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-gray-600 relative inline-block"><span class="relative text-white">stone</span></span></blockquote></div>',1))]))}};export{O as default};
