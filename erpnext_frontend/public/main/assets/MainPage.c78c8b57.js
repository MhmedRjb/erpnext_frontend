var d=(u,i,t)=>new Promise((a,l)=>{var r=s=>{try{e(t.next(s))}catch(o){l(o)}},c=s=>{try{e(t.throw(s))}catch(o){l(o)}},e=s=>s.done?a(s.value):Promise.resolve(s.value).then(r,c);e((t=t.apply(u,i)).next())});import{l as n,p as v,q as k,a as m,o as f,f as p,m as b,F as w,v as _,x,u as g,y as h,z as y}from"./vendor.bd7e8f83.js";import{g as B,a as j,_ as N}from"./workspaceUtils.c3f7a901.js";const q={class:"h-screen flex flex-col"},D={class:"flex flex-grow basis-auto m-10"},E={class:"flex-grow lg:overflow-hidden"},L={class:"flex flex-wrap gap-4 justify-start sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-6"},U={__name:"MainPage",setup(u){const i=n([]),t=n([]),a=n(null),l=()=>d(this,null,function*(){try{const e=yield fetch("/api/method/erpnext_frontend.api.get_bootinfo");if(!e.ok)throw new Error("Network response was not ok");const s=yield e.json();console.log(s.message),i.value=s.message,t.value=s.message,a.value=s.message}catch(e){console.error("Error fetching bootinfo:",e)}});v(()=>{l()});const r=n(null);k(a,e=>{e&&(r.value=y({doctype:"Workspace",fields:["*"],idx:"title",filters:[["parent_page","in",[""]],["title","in",e]],auto:!0}))});const c=m(()=>{var e;return((e=r.value)==null?void 0:e.list.data)||[]});return(e,s)=>(f(),p("div",q,[b("div",D,[b("div",E,[b("div",L,[(f(!0),p(w,null,_(c.value,o=>(f(),x(N,{key:o.title,workspace:o,color:g(B)(o.title),svgData:o.custom_second_icon,url:g(j)(o.title)},null,8,["workspace","color","svgData","url"]))),128))])])]),s[0]||(s[0]=h('<div class="flex justify-center basis-44"><blockquote class="text-2xl font-semibold italic text-center text-slate-900"> Nothing is built on <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-gray-600 relative inline-block"><span class="relative text-white">stone</span></span> all is built on <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-yellow-400 relative inline-block"><span class="relative">sand</span></span><br><br> but we must build as if the <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-yellow-400 relative inline-block"><span class="relative">sand</span></span> were <span class="before:block before:absolute before:-inset-1 before:-skew-y-3 before:bg-gray-600 relative inline-block"><span class="relative text-white">stone</span></span></blockquote></div>',1))]))}};export{U as default};
